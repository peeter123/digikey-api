# coding: utf-8

"""
    Orders

    API operations for managing orders as well as refunds and incidents as they relate to the order  # noqa: E501

    OpenAPI spec version: suppliers-v1
    Contact: MarketplaceAPISupport@digikey.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class OrderDetail(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'order_detail_id': 'str',
        'create_date_utc': 'datetime',
        'last_update_date_utc': 'datetime',
        'acceptance_rejection_date_utc': 'datetime',
        'cancellation_date_utc': 'datetime',
        'order_detail_state': 'str',
        'offer_id': 'str',
        'offer_legacy_id': 'int',
        'offer_lead_time': 'int',
        'discount_fee': 'float',
        'discount_rate': 'float',
        'total_price': 'float',
        'unit_price': 'float',
        'quantity': 'int',
        'product_part_number': 'str',
        'supplier_sku': 'str',
        'product_business_id': 'str',
        'adjusted_discount_fee': 'float',
        'adjusted_total_price': 'float',
        'adjusted_quantity': 'int',
        'cancellations': 'list[OrderCancellation]',
        'incidents': 'list[OrderIncident]',
        'additional_fields': 'list[AdditionalField]',
        'product_image_url': 'str',
        'product_category_name': 'str',
        'offer_description': 'str'
    }

    attribute_map = {
        'order_detail_id': 'orderDetailId',
        'create_date_utc': 'createDateUtc',
        'last_update_date_utc': 'lastUpdateDateUtc',
        'acceptance_rejection_date_utc': 'acceptanceRejectionDateUtc',
        'cancellation_date_utc': 'cancellationDateUtc',
        'order_detail_state': 'orderDetailState',
        'offer_id': 'offerId',
        'offer_legacy_id': 'offerLegacyId',
        'offer_lead_time': 'offerLeadTime',
        'discount_fee': 'discountFee',
        'discount_rate': 'discountRate',
        'total_price': 'totalPrice',
        'unit_price': 'unitPrice',
        'quantity': 'quantity',
        'product_part_number': 'productPartNumber',
        'supplier_sku': 'supplierSku',
        'product_business_id': 'productBusinessId',
        'adjusted_discount_fee': 'adjustedDiscountFee',
        'adjusted_total_price': 'adjustedTotalPrice',
        'adjusted_quantity': 'adjustedQuantity',
        'cancellations': 'cancellations',
        'incidents': 'incidents',
        'additional_fields': 'additionalFields',
        'product_image_url': 'productImageUrl',
        'product_category_name': 'productCategoryName',
        'offer_description': 'offerDescription'
    }

    def __init__(self, order_detail_id=None, create_date_utc=None, last_update_date_utc=None, acceptance_rejection_date_utc=None, cancellation_date_utc=None, order_detail_state=None, offer_id=None, offer_legacy_id=None, offer_lead_time=None, discount_fee=None, discount_rate=None, total_price=None, unit_price=None, quantity=None, product_part_number=None, supplier_sku=None, product_business_id=None, adjusted_discount_fee=None, adjusted_total_price=None, adjusted_quantity=None, cancellations=None, incidents=None, additional_fields=None, product_image_url=None, product_category_name=None, offer_description=None):  # noqa: E501
        """OrderDetail - a model defined in Swagger"""  # noqa: E501

        self._order_detail_id = None
        self._create_date_utc = None
        self._last_update_date_utc = None
        self._acceptance_rejection_date_utc = None
        self._cancellation_date_utc = None
        self._order_detail_state = None
        self._offer_id = None
        self._offer_legacy_id = None
        self._offer_lead_time = None
        self._discount_fee = None
        self._discount_rate = None
        self._total_price = None
        self._unit_price = None
        self._quantity = None
        self._product_part_number = None
        self._supplier_sku = None
        self._product_business_id = None
        self._adjusted_discount_fee = None
        self._adjusted_total_price = None
        self._adjusted_quantity = None
        self._cancellations = None
        self._incidents = None
        self._additional_fields = None
        self._product_image_url = None
        self._product_category_name = None
        self._offer_description = None
        self.discriminator = None

        if order_detail_id is not None:
            self.order_detail_id = order_detail_id
        if create_date_utc is not None:
            self.create_date_utc = create_date_utc
        if last_update_date_utc is not None:
            self.last_update_date_utc = last_update_date_utc
        if acceptance_rejection_date_utc is not None:
            self.acceptance_rejection_date_utc = acceptance_rejection_date_utc
        if cancellation_date_utc is not None:
            self.cancellation_date_utc = cancellation_date_utc
        if order_detail_state is not None:
            self.order_detail_state = order_detail_state
        if offer_id is not None:
            self.offer_id = offer_id
        if offer_legacy_id is not None:
            self.offer_legacy_id = offer_legacy_id
        if offer_lead_time is not None:
            self.offer_lead_time = offer_lead_time
        if discount_fee is not None:
            self.discount_fee = discount_fee
        if discount_rate is not None:
            self.discount_rate = discount_rate
        if total_price is not None:
            self.total_price = total_price
        if unit_price is not None:
            self.unit_price = unit_price
        if quantity is not None:
            self.quantity = quantity
        if product_part_number is not None:
            self.product_part_number = product_part_number
        if supplier_sku is not None:
            self.supplier_sku = supplier_sku
        if product_business_id is not None:
            self.product_business_id = product_business_id
        if adjusted_discount_fee is not None:
            self.adjusted_discount_fee = adjusted_discount_fee
        if adjusted_total_price is not None:
            self.adjusted_total_price = adjusted_total_price
        if adjusted_quantity is not None:
            self.adjusted_quantity = adjusted_quantity
        if cancellations is not None:
            self.cancellations = cancellations
        if incidents is not None:
            self.incidents = incidents
        if additional_fields is not None:
            self.additional_fields = additional_fields
        if product_image_url is not None:
            self.product_image_url = product_image_url
        if product_category_name is not None:
            self.product_category_name = product_category_name
        if offer_description is not None:
            self.offer_description = offer_description

    @property
    def order_detail_id(self):
        """Gets the order_detail_id of this OrderDetail.  # noqa: E501


        :return: The order_detail_id of this OrderDetail.  # noqa: E501
        :rtype: str
        """
        return self._order_detail_id

    @order_detail_id.setter
    def order_detail_id(self, order_detail_id):
        """Sets the order_detail_id of this OrderDetail.


        :param order_detail_id: The order_detail_id of this OrderDetail.  # noqa: E501
        :type: str
        """

        self._order_detail_id = order_detail_id

    @property
    def create_date_utc(self):
        """Gets the create_date_utc of this OrderDetail.  # noqa: E501


        :return: The create_date_utc of this OrderDetail.  # noqa: E501
        :rtype: datetime
        """
        return self._create_date_utc

    @create_date_utc.setter
    def create_date_utc(self, create_date_utc):
        """Sets the create_date_utc of this OrderDetail.


        :param create_date_utc: The create_date_utc of this OrderDetail.  # noqa: E501
        :type: datetime
        """

        self._create_date_utc = create_date_utc

    @property
    def last_update_date_utc(self):
        """Gets the last_update_date_utc of this OrderDetail.  # noqa: E501


        :return: The last_update_date_utc of this OrderDetail.  # noqa: E501
        :rtype: datetime
        """
        return self._last_update_date_utc

    @last_update_date_utc.setter
    def last_update_date_utc(self, last_update_date_utc):
        """Sets the last_update_date_utc of this OrderDetail.


        :param last_update_date_utc: The last_update_date_utc of this OrderDetail.  # noqa: E501
        :type: datetime
        """

        self._last_update_date_utc = last_update_date_utc

    @property
    def acceptance_rejection_date_utc(self):
        """Gets the acceptance_rejection_date_utc of this OrderDetail.  # noqa: E501


        :return: The acceptance_rejection_date_utc of this OrderDetail.  # noqa: E501
        :rtype: datetime
        """
        return self._acceptance_rejection_date_utc

    @acceptance_rejection_date_utc.setter
    def acceptance_rejection_date_utc(self, acceptance_rejection_date_utc):
        """Sets the acceptance_rejection_date_utc of this OrderDetail.


        :param acceptance_rejection_date_utc: The acceptance_rejection_date_utc of this OrderDetail.  # noqa: E501
        :type: datetime
        """

        self._acceptance_rejection_date_utc = acceptance_rejection_date_utc

    @property
    def cancellation_date_utc(self):
        """Gets the cancellation_date_utc of this OrderDetail.  # noqa: E501


        :return: The cancellation_date_utc of this OrderDetail.  # noqa: E501
        :rtype: datetime
        """
        return self._cancellation_date_utc

    @cancellation_date_utc.setter
    def cancellation_date_utc(self, cancellation_date_utc):
        """Sets the cancellation_date_utc of this OrderDetail.


        :param cancellation_date_utc: The cancellation_date_utc of this OrderDetail.  # noqa: E501
        :type: datetime
        """

        self._cancellation_date_utc = cancellation_date_utc

    @property
    def order_detail_state(self):
        """Gets the order_detail_state of this OrderDetail.  # noqa: E501


        :return: The order_detail_state of this OrderDetail.  # noqa: E501
        :rtype: str
        """
        return self._order_detail_state

    @order_detail_state.setter
    def order_detail_state(self, order_detail_state):
        """Sets the order_detail_state of this OrderDetail.


        :param order_detail_state: The order_detail_state of this OrderDetail.  # noqa: E501
        :type: str
        """
        allowed_values = ["WaitingAcceptance", "Accepted", "ShippingInProgress", "Shipped", "Received", "IncidentOpen", "Refunded", "Closed", "Cancelled", "Rejected"]  # noqa: E501
        if order_detail_state not in allowed_values:
            raise ValueError(
                "Invalid value for `order_detail_state` ({0}), must be one of {1}"  # noqa: E501
                .format(order_detail_state, allowed_values)
            )

        self._order_detail_state = order_detail_state

    @property
    def offer_id(self):
        """Gets the offer_id of this OrderDetail.  # noqa: E501


        :return: The offer_id of this OrderDetail.  # noqa: E501
        :rtype: str
        """
        return self._offer_id

    @offer_id.setter
    def offer_id(self, offer_id):
        """Sets the offer_id of this OrderDetail.


        :param offer_id: The offer_id of this OrderDetail.  # noqa: E501
        :type: str
        """

        self._offer_id = offer_id

    @property
    def offer_legacy_id(self):
        """Gets the offer_legacy_id of this OrderDetail.  # noqa: E501


        :return: The offer_legacy_id of this OrderDetail.  # noqa: E501
        :rtype: int
        """
        return self._offer_legacy_id

    @offer_legacy_id.setter
    def offer_legacy_id(self, offer_legacy_id):
        """Sets the offer_legacy_id of this OrderDetail.


        :param offer_legacy_id: The offer_legacy_id of this OrderDetail.  # noqa: E501
        :type: int
        """

        self._offer_legacy_id = offer_legacy_id

    @property
    def offer_lead_time(self):
        """Gets the offer_lead_time of this OrderDetail.  # noqa: E501


        :return: The offer_lead_time of this OrderDetail.  # noqa: E501
        :rtype: int
        """
        return self._offer_lead_time

    @offer_lead_time.setter
    def offer_lead_time(self, offer_lead_time):
        """Sets the offer_lead_time of this OrderDetail.


        :param offer_lead_time: The offer_lead_time of this OrderDetail.  # noqa: E501
        :type: int
        """

        self._offer_lead_time = offer_lead_time

    @property
    def discount_fee(self):
        """Gets the discount_fee of this OrderDetail.  # noqa: E501


        :return: The discount_fee of this OrderDetail.  # noqa: E501
        :rtype: float
        """
        return self._discount_fee

    @discount_fee.setter
    def discount_fee(self, discount_fee):
        """Sets the discount_fee of this OrderDetail.


        :param discount_fee: The discount_fee of this OrderDetail.  # noqa: E501
        :type: float
        """

        self._discount_fee = discount_fee

    @property
    def discount_rate(self):
        """Gets the discount_rate of this OrderDetail.  # noqa: E501


        :return: The discount_rate of this OrderDetail.  # noqa: E501
        :rtype: float
        """
        return self._discount_rate

    @discount_rate.setter
    def discount_rate(self, discount_rate):
        """Sets the discount_rate of this OrderDetail.


        :param discount_rate: The discount_rate of this OrderDetail.  # noqa: E501
        :type: float
        """

        self._discount_rate = discount_rate

    @property
    def total_price(self):
        """Gets the total_price of this OrderDetail.  # noqa: E501


        :return: The total_price of this OrderDetail.  # noqa: E501
        :rtype: float
        """
        return self._total_price

    @total_price.setter
    def total_price(self, total_price):
        """Sets the total_price of this OrderDetail.


        :param total_price: The total_price of this OrderDetail.  # noqa: E501
        :type: float
        """

        self._total_price = total_price

    @property
    def unit_price(self):
        """Gets the unit_price of this OrderDetail.  # noqa: E501


        :return: The unit_price of this OrderDetail.  # noqa: E501
        :rtype: float
        """
        return self._unit_price

    @unit_price.setter
    def unit_price(self, unit_price):
        """Sets the unit_price of this OrderDetail.


        :param unit_price: The unit_price of this OrderDetail.  # noqa: E501
        :type: float
        """

        self._unit_price = unit_price

    @property
    def quantity(self):
        """Gets the quantity of this OrderDetail.  # noqa: E501


        :return: The quantity of this OrderDetail.  # noqa: E501
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this OrderDetail.


        :param quantity: The quantity of this OrderDetail.  # noqa: E501
        :type: int
        """

        self._quantity = quantity

    @property
    def product_part_number(self):
        """Gets the product_part_number of this OrderDetail.  # noqa: E501


        :return: The product_part_number of this OrderDetail.  # noqa: E501
        :rtype: str
        """
        return self._product_part_number

    @product_part_number.setter
    def product_part_number(self, product_part_number):
        """Sets the product_part_number of this OrderDetail.


        :param product_part_number: The product_part_number of this OrderDetail.  # noqa: E501
        :type: str
        """

        self._product_part_number = product_part_number

    @property
    def supplier_sku(self):
        """Gets the supplier_sku of this OrderDetail.  # noqa: E501


        :return: The supplier_sku of this OrderDetail.  # noqa: E501
        :rtype: str
        """
        return self._supplier_sku

    @supplier_sku.setter
    def supplier_sku(self, supplier_sku):
        """Sets the supplier_sku of this OrderDetail.


        :param supplier_sku: The supplier_sku of this OrderDetail.  # noqa: E501
        :type: str
        """

        self._supplier_sku = supplier_sku

    @property
    def product_business_id(self):
        """Gets the product_business_id of this OrderDetail.  # noqa: E501


        :return: The product_business_id of this OrderDetail.  # noqa: E501
        :rtype: str
        """
        return self._product_business_id

    @product_business_id.setter
    def product_business_id(self, product_business_id):
        """Sets the product_business_id of this OrderDetail.


        :param product_business_id: The product_business_id of this OrderDetail.  # noqa: E501
        :type: str
        """

        self._product_business_id = product_business_id

    @property
    def adjusted_discount_fee(self):
        """Gets the adjusted_discount_fee of this OrderDetail.  # noqa: E501


        :return: The adjusted_discount_fee of this OrderDetail.  # noqa: E501
        :rtype: float
        """
        return self._adjusted_discount_fee

    @adjusted_discount_fee.setter
    def adjusted_discount_fee(self, adjusted_discount_fee):
        """Sets the adjusted_discount_fee of this OrderDetail.


        :param adjusted_discount_fee: The adjusted_discount_fee of this OrderDetail.  # noqa: E501
        :type: float
        """

        self._adjusted_discount_fee = adjusted_discount_fee

    @property
    def adjusted_total_price(self):
        """Gets the adjusted_total_price of this OrderDetail.  # noqa: E501


        :return: The adjusted_total_price of this OrderDetail.  # noqa: E501
        :rtype: float
        """
        return self._adjusted_total_price

    @adjusted_total_price.setter
    def adjusted_total_price(self, adjusted_total_price):
        """Sets the adjusted_total_price of this OrderDetail.


        :param adjusted_total_price: The adjusted_total_price of this OrderDetail.  # noqa: E501
        :type: float
        """

        self._adjusted_total_price = adjusted_total_price

    @property
    def adjusted_quantity(self):
        """Gets the adjusted_quantity of this OrderDetail.  # noqa: E501


        :return: The adjusted_quantity of this OrderDetail.  # noqa: E501
        :rtype: int
        """
        return self._adjusted_quantity

    @adjusted_quantity.setter
    def adjusted_quantity(self, adjusted_quantity):
        """Sets the adjusted_quantity of this OrderDetail.


        :param adjusted_quantity: The adjusted_quantity of this OrderDetail.  # noqa: E501
        :type: int
        """

        self._adjusted_quantity = adjusted_quantity

    @property
    def cancellations(self):
        """Gets the cancellations of this OrderDetail.  # noqa: E501


        :return: The cancellations of this OrderDetail.  # noqa: E501
        :rtype: list[OrderCancellation]
        """
        return self._cancellations

    @cancellations.setter
    def cancellations(self, cancellations):
        """Sets the cancellations of this OrderDetail.


        :param cancellations: The cancellations of this OrderDetail.  # noqa: E501
        :type: list[OrderCancellation]
        """

        self._cancellations = cancellations

    @property
    def incidents(self):
        """Gets the incidents of this OrderDetail.  # noqa: E501


        :return: The incidents of this OrderDetail.  # noqa: E501
        :rtype: list[OrderIncident]
        """
        return self._incidents

    @incidents.setter
    def incidents(self, incidents):
        """Sets the incidents of this OrderDetail.


        :param incidents: The incidents of this OrderDetail.  # noqa: E501
        :type: list[OrderIncident]
        """

        self._incidents = incidents

    @property
    def additional_fields(self):
        """Gets the additional_fields of this OrderDetail.  # noqa: E501


        :return: The additional_fields of this OrderDetail.  # noqa: E501
        :rtype: list[AdditionalField]
        """
        return self._additional_fields

    @additional_fields.setter
    def additional_fields(self, additional_fields):
        """Sets the additional_fields of this OrderDetail.


        :param additional_fields: The additional_fields of this OrderDetail.  # noqa: E501
        :type: list[AdditionalField]
        """

        self._additional_fields = additional_fields

    @property
    def product_image_url(self):
        """Gets the product_image_url of this OrderDetail.  # noqa: E501


        :return: The product_image_url of this OrderDetail.  # noqa: E501
        :rtype: str
        """
        return self._product_image_url

    @product_image_url.setter
    def product_image_url(self, product_image_url):
        """Sets the product_image_url of this OrderDetail.


        :param product_image_url: The product_image_url of this OrderDetail.  # noqa: E501
        :type: str
        """

        self._product_image_url = product_image_url

    @property
    def product_category_name(self):
        """Gets the product_category_name of this OrderDetail.  # noqa: E501


        :return: The product_category_name of this OrderDetail.  # noqa: E501
        :rtype: str
        """
        return self._product_category_name

    @product_category_name.setter
    def product_category_name(self, product_category_name):
        """Sets the product_category_name of this OrderDetail.


        :param product_category_name: The product_category_name of this OrderDetail.  # noqa: E501
        :type: str
        """

        self._product_category_name = product_category_name

    @property
    def offer_description(self):
        """Gets the offer_description of this OrderDetail.  # noqa: E501


        :return: The offer_description of this OrderDetail.  # noqa: E501
        :rtype: str
        """
        return self._offer_description

    @offer_description.setter
    def offer_description(self, offer_description):
        """Sets the offer_description of this OrderDetail.


        :param offer_description: The offer_description of this OrderDetail.  # noqa: E501
        :type: str
        """

        self._offer_description = offer_description

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(OrderDetail, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, OrderDetail):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
